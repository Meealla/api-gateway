plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.1'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'checkstyle'
}

group = 'ru.kata.project'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '21'

checkstyle {
	toolVersion = '10.12.1'
	configFile = file('config/checkstyle/google_checks.xml')
}

tasks.withType(Checkstyle) {
	reports {
		html.required = true
		xml.required = false
		//html.stylesheet = resources.text.fromFile('config/xsl/checkstyle-custom.xsl')
	}
}

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/milestone" }
	mavenLocal()
}

ext {
	set('springCloudVersion', "2024.0.0")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.cloud:spring-cloud-starter-gateway'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.kafka:spring-kafka'
	implementation 'org.apache.kafka:kafka-clients'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation 'org.mockito:mockito-core:5.0.0'
	implementation 'org.springframework.cloud:spring-cloud-starter-loadbalancer'
	compileOnly 'org.projectlombok:lombok:1.18.36'
	annotationProcessor 'org.projectlombok:lombok:1.18.36'

	implementation 'org.example:analytics-message:0.0.1-SNAPSHOT'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.withType(Checkstyle) {
	reports {
		html.required = true
		xml.required = false
	}
}
checkstyle {
	toolVersion '10.20.2'
	configFile file("\\src\\main\\java\\webapp\\apigateway\\config\\checkstyle\\checkstyle.xml ")
	ignoreFailures = true
	maxWarnings = 0
	maxErrors = 0
}
checkstyleMain {
	source ='src/main/java'
}
checkstyleTest {
	source ='src/test/java'
}